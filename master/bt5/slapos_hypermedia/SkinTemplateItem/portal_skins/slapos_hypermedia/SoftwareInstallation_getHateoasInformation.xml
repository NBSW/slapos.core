<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="PythonScript" module="Products.PythonScripts.PythonScript"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string>from zExceptions import Unauthorized\n
from AccessControl import getSecurityManager\n
if REQUEST is None:\n
  raise Unauthorized\n
\n
response = REQUEST.RESPONSE\n
mime_type = \'application/hal+json\'\n
\n
if REQUEST.other[\'method\'] != "GET":\n
  response.setStatus(405)\n
  return ""\n
elif mime_type != context.Base_handleAcceptHeader([mime_type]):\n
  response.setStatus(406)\n
  return ""\n
elif context.getPortalType() not in ["Software Installation"]:\n
  response.setStatus(403)\n
  return ""\n
else:\n
\n
  if context.getSlapState() == "stop_requested":\n
    state = \'stopped\'\n
  elif context.getSlapState() == "start_requested":\n
    state = \'started\'\n
  else:\n
    state = \'destroyed\'\n
\n
  import json\n
  result_dict = {\n
      \'title\': context.getTitle(),\n
      \'status\': state,\n
      \'_links\': {\n
        "self": { "href": context.Base_getRequestUrl() },\n
        "index": {\n
          "href": "urn:jio:get:%s" % context.getRelativeUrl(),\n
          "title": "Software Installation"\n
        },\n
      },\n
    }\n
  url_string = context.getUrlString(None)\n
  if url_string is not None:\n
    result_dict["_links"]["software_release"] = { "href": url_string }\n
\n
  response.setHeader(\'Content-Type\', mime_type)\n
  return json.dumps(result_dict)\n
</string> </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>REQUEST=None</string> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>SoftwareInstallation_getHateoasInformation</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>

<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="PythonScript" module="Products.PythonScripts.PythonScript"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string>if REQUEST.other[\'method\'] != "POST":\n
  response.setStatus(405)\n
  return ""\n
\n
portal = context.getPortalObject()\n
computer = context\n
\n
if allocation_scope == \'open/public\':\n
  # Public computer capacity is handle by an alarm\n
  capacity_scope = \'close\'\n
elif allocation_scope.startswith(\'open\'):\n
  # Capacity is not handled for \'private\' computers\n
  capacity_scope = \'open\'\n
else:\n
  capacity_scope = \'close\'\n
\n
edit_kw = {\n
  \'allocation_scope\': allocation_scope,\n
  \'capacity_scope\': capacity_scope,\n
}\n
\n
self_person = computer.getSourceAdministrationValue(portal_type="Person")\n
self_email = self_person.getDefaultEmailCoordinateText()\n
if allocation_scope == \'open/public\':\n
  # reset friends and update in place\n
  edit_kw[\'subject_list\'] = [\'\']\n
  edit_kw[\'destination_section\'] = None\n
elif allocation_scope == \'open/personal\':\n
  # reset friends to self and update in place\n
  edit_kw[\'subject_list\'] = [self_email]\n
  edit_kw[\'destination_section_value\'] = self_person\n
else:\n
  if self_email not in subject_list:\n
    # add self as friend\n
    subject_list.append(self_email)\n
  edit_kw[\'subject_list\'] = subject_list\n
\n
computer.edit(**edit_kw)\n
\n
return ""\n
</string> </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>allocation_scope, subject_list, REQUEST=None</string> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>Computer_updateAllocationScopeFromJio</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>

<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="PythonScript" module="Products.PythonScripts.PythonScript"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string>if context.getSimulationState() != \'started\':\n
  # Update Decision is not on started state, Upgrade is not possible!\n
  return\n
\n
hosting_subscription = context.UpgradeDecision_getHostingSubscription()\n
software_release_url = context.UpgradeDecision_getSoftwareReleaseUrl()\n
\n
person = hosting_subscription.getDestinationSectionValue(portal_type="Person")\n
\n
status = hosting_subscription.getSlapState()\n
\n
if status == "start_requested":\n
  state = "started"\n
elif status == "stop_requested":\n
  state = "stopped"\n
elif status == "destroy_requested":\n
  state = "destroyed"\n
  \n
person.requestSoftwareInstance(\n
  state=state,\n
  software_release=new_sr_url,\n
  software_title=hosting_subscription.getTitle(),\n
  software_type=hosting_subscription.getSourceReference(),\n
  instance_xml=hosting_subscription.getTextContent(),\n
  sla_xml=hosting_subscription.getSlaXml(),\n
  shared=hosting_subscription.isRootSlave()\n
)\n
</string> </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>UpgradeDecision_upgradeHostingSubscription</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>

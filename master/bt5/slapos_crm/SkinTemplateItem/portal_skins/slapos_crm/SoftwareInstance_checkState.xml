<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="PythonScript" module="Products.PythonScripts.PythonScript"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string encoding="cdata"><![CDATA[

from DateTime import DateTime\n
import json\n
\n
reference = context.getReference()\n
memcached_dict = context.getPortalObject().portal_memcached.getMemcachedDict(\n
  key_prefix=\'slap_tool\',\n
  plugin_path=\'portal_memcached/default_memcached_plugin\')\n
  \n
try:\n
  d = memcached_dict[reference]\n
except KeyError:\n
  return  \n
  \n
d = json.loads(d)\n
result = d[\'text\']\n
last_contact = DateTime(d.get(\'created_at\'))\n
now = DateTime()\n
title = ""\n
\n
if result.startswith(\'#error \'):\n
  # If no change in the last 2 hours generate a support request\n
  if (now - last_contact) > 0.08:\n
    tag = "Support Request generation for %s" % reference\n
    title = "Instance %s in error state" % reference\n
    description = "%s has been in error state for more than 2 hours (last contact date: %s)" % (reference, last_contact)\n
\n
elif result.startswith(\'#access \'):\n
  # If there was no contact for more than one day generate a support request\n
  if (now - last_contact) > 1:\n
    tag = "Support Request generation for %s" % reference\n
    title = "Instance %s in unknown state" % reference\n
    description = "%s has not contacted the server for more than 24 hours (last contact date: %s)" % (reference, last_contact)\n
\n
if title != "":\n
  return context.Base_generateSupportRequestForSlapOS(\n
    title,\n
    description,\n
    context.getRelativeUrl()\n
  )\n


]]></string> </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>SoftwareInstance_checkState</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>

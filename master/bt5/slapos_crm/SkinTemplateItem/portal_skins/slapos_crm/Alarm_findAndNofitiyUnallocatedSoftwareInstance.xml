<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="PythonScript" module="Products.PythonScripts.PythonScript"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string encoding="cdata"><![CDATA[

portal = context.getPortalObject()\n
\n
#Get all unallocated Software Instance\n
select_dict= {\'default_aggregate_uid\': None}\n
software_instance_list = context.portal_catalog(\n
  portal_type=["Software Instance", "Slave Instance"],\n
  validation_state="validated",\n
  # Do not fetch destroyed instances\n
  # XXX slap_state=["start_requested", "stop_requested"],\n
  default_aggregate_uid=None,\n
  select_dict=select_dict,\n
  left_join_list=select_dict.keys()\n
  )\n
\n
#Get the list of concerned Hosting Subscription reference\n
hs_reference_list = set([si.getSpecialiseReference() for si in software_instance_list \n
                   if si.getSlapState() in [\'start_requested\', \'stop_requested\']\n
                  ])\n
\n
if len(hs_reference_list) > 0:\n
  portal.portal_catalog.searchAndActivate(\n
    portal_type=\'Hosting Subscription\',\n
    validation_state=\'validated\',\n
    reference=hs_reference_list,\n
    method_id=\'HostingSubscription_checkSofwareInstanceState\',\n
    activate_kw = {\'tag\':tag}\n
  )\n
\n
context.activate(after_tag=tag).getId()\n


]]></string> </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>tag, fixit, params</string> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>Alarm_findAndNofitiyUnallocatedSoftwareInstance</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
